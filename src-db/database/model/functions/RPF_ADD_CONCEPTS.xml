<?xml version="1.0"?>
  <database name="FUNCTION RPF_ADD_CONCEPTS">
    <function name="RPF_ADD_CONCEPTS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2011 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  --  Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_Result NUMBER:=1; --  Success
  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    --  Record Info
    v_Client_ID VARCHAR2(32);
    v_Org_ID VARCHAR2(32);
    v_User_ID VARCHAR2(32);
    v_UpdatedBy VARCHAR2(32);
    v_Count NUMBER;
    V_RpfPayrollID VARCHAR2(32);
    v_C_DocType_ID VARCHAR(32);
    v_DocumentNo VARCHAR(32);
    v_ConceptsID VARCHAR(32);
    cur_employee RECORD;
    cur_concepts RECORD;
    v_AddicID VARCHAR(32);
  BEGIN
    v_Result:=1;
    --  Get Parameters
    v_ResultStr:='ReadingParameters';

    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        p.AD_Org_ID,
        p.AD_Client_ID
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
      v_Org_ID:=Cur_Parameter.AD_Org_ID;
      v_Client_ID:=Cur_Parameter.AD_Client_ID;
      v_ConceptsID:=Cur_Parameter.P_String;
    END LOOP; --  Get Parameter

	SELECT AD_CLIENT_ID,CREATEDBY,AD_ORG_ID INTO v_Client_ID,v_User_ID,v_Org_ID FROM RPF_Payroll WHERE rpf_payroll_ID=v_Record_ID;

	--RAISE NO_DATA_FOUND||v_ConceptsID; 


	FOR cur_employee in (SELECT EM_RPF_NUMEMPLEADO,RPT.RPF_PAYROLL_TIMBRE_ID  FROM RPF_PAYROLL_TIMBRE RPT LEFT JOIN C_BPARTNER CB ON CB.C_BPARTNER_ID = RPT.C_BPARTNER_ID WHERE RPT.RPF_PAYROLL_ID= v_Record_ID)
	Loop

		for cur_concepts in (SELECT * FROM rpf_concept_line WHERE rpf_concept_id = v_ConceptsID AND numempleado = cur_employee.EM_RPF_NUMEMPLEADO)
		loop
			update RPF_PAYROLL_TIMBRE set num_days = TO_NUMBER(cur_concepts.num_dias) where RPF_PAYROLL_TIMBRE_id = cur_employee.RPF_PAYROLL_TIMBRE_ID;
			
			if cur_concepts.mnt_deductions = '0' then
				--RAISE NO_DATA_FOUND||cur_concepts.mnt_deductions;
				v_AddicID := ad_sequence_nextno('rpf_payroll_adictions_id');
			
				INSERT INTO rpf_payroll_adictions(
				rpf_payroll_adictions_id, ad_client_id, ad_org_id, isactive, 
				created, createdby, updated, updatedby, concepto, monto, rpf_payroll_timbre_id)
				VALUES (v_AddicID, v_Client_ID, v_Org_ID, 'Y', 
				now(), v_User_ID, now(), v_User_ID, cur_concepts.concept, cur_concepts.mnt_addictions, cur_employee.RPF_PAYROLL_TIMBRE_ID);

			end if;

			if cur_concepts.mnt_addictions = '0' then

				v_AddicID := ad_sequence_nextno('rpf_payroll_deductions_id');
				--RAISE NO_DATA_FOUND||cur_concepts.mnt_deductions;
				INSERT INTO rpf_payroll_deductions(
				rpf_payroll_deductions_id, ad_client_id, ad_org_id, isactive, 
				created, createdby, updated, updatedby, concepto, monto, rpf_payroll_timbre_id)
				VALUES (v_AddicID, v_Client_ID, v_Org_ID, 'Y', 
				now(), v_User_ID, now(), v_User_ID, cur_concepts.concept, cur_concepts.mnt_deductions, cur_employee.RPF_PAYROLL_TIMBRE_ID);
	
			end if;
			
		end loop;

	end loop;


	v_Message := 'Termino la carga de los conceptos para los empleados.';
		
	SELECT count(*) INTO v_count
	FROM DUAL
	where exists (select 1 from ad_ep_procedures where ad_extension_points_id = 'FF80818132FC38BB0132FC8B43AE000D');
	IF (v_count=1) THEN
	  DECLARE
	    v_ep_instance VARCHAR2(32);
	    v_extension_point_id VARCHAR2(32) := 'FF80818132FC38BB0132FC8B43AE000D';
	  BEGIN
	    v_ep_instance := get_uuid();
	    AD_EP_INSTANCE_PARA_INSERT(v_ep_instance, v_extension_point_id, 'Record_ID',
	      v_Record_ID, NULL, NULL, NULL, NULL, NULL, NULL);
	    AD_EP_INSTANCE_PARA_INSERT(v_ep_instance, v_extension_point_id, 'RPF_Payroll_ID',
	      v_Version, NULL, NULL, NULL, NULL, NULL, NULL);
	    AD_EP_INSTANCE_PARA_INSERT(v_ep_instance, v_extension_point_id, 'User',
	      v_User_ID, NULL, NULL, NULL, NULL, NULL, NULL);
	    AD_EP_INSTANCE_PARA_INSERT(v_ep_instance, v_extension_point_id, 'Message',
	      NULL, NULL, NULL, NULL, NULL, NULL, v_Message);
	    AD_EP_INSTANCE_PARA_INSERT(v_ep_instance, v_extension_point_id, 'Result',
	      NULL, NULL, v_Result, NULL, NULL, NULL, NULL);
	    AD_EXTENSION_POINT_HANDLER(v_ep_instance, v_extension_point_id);
	    SELECT p_number INTO v_Result
	    FROM ad_ep_instance_para
	    WHERE ad_ep_instance_id = v_ep_instance
	      AND parametername LIKE 'Result';
	    SELECT p_text INTO v_Message
	    FROM ad_ep_instance_para
	    WHERE ad_ep_instance_id = v_ep_instance
	      AND parametername LIKE 'Message';
		  
	    DELETE FROM ad_ep_instance_para
	    WHERE ad_ep_instance_id = v_ep_instance;
	  END;
	END IF;
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, v_User_ID, 'N', v_Result, v_Message) ;
    RETURN;
EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;
    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    ROLLBACK;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END RPF_ADD_CONCEPTS
]]></body>
    </function>
  </database>
